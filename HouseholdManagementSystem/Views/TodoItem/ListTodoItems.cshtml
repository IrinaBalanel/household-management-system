@model HouseholdManagementSystem.Models.ViewModels.FilterTodoItems
@{
    ViewBag.Title = "List Todo Items";
}

<h2 class="text-center mb-4">To-Do Items</h2>
<div class="filter-container" style="max-width: 1000px; margin: 0 auto;">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <div class="d-flex align-items-center">
            <img src="~/Content/images/filter_icon.png" alt="A funnel shaped icon">
            <span class="filter-by-text ms-2">Filter By</span>
            <select class="form-select ms-2 select-primary" style="width: auto;" id="statusDropdown" onchange="location = this.value;">
                <option selected disabled>Status</option>
                @foreach (var status in Model.StatusList)
                {
                    <option value="@Url.Action("ListTodoItems", "TodoItem", new { status = status.Status })" @(Model.SelectedStatus == status.Status ? "selected" : "")>@status.Status</option>
                }
            </select>
            <select class="form-select ms-2 select-primary" style="width: auto;" id="categoryDropdown" onchange="location = this.value;">
                <option selected disabled>Category</option>
                @foreach (var category in Model.CategoryList)
                {
                    <option value="@Url.Action("ListTodoItems", "TodoItem", new { categoryName = category.CategoryName })" @(Model.SelectedCategory == category.CategoryName ? "selected" : "")>@category.CategoryName</option>
                }
            </select>
            <select class="form-select ms-2 select-primary" style="width: auto;" id="assignedDropdown" onchange="location = this.value;">
                <option selected disabled>Assigned To</option>
                @foreach (var assignedtoowner in Model.AssignedToOwnersList)
                {
                    <option value="@Url.Action("ListTodoItems", "TodoItem", new { assignedToOwner = assignedtoowner.OwnerName })" @(Model.SelectedAssignedToOwner == assignedtoowner.OwnerName ? "selected" : "")>@assignedtoowner.OwnerName</option>
                }
            </select>
            <select class="form-select ms-2 select-primary" style="width: auto;" id="createdDropdown" onchange="location = this.value;">
                <option selected disabled>Created By</option>
                @foreach (var createdbyowner in Model.CreatedByOwnersList)
                {
                    <option value="@Url.Action("ListTodoItems", "TodoItem", new { createdByOwner = createdbyowner.OwnerName })" @(Model.SelectedCreatedByOwner == createdbyowner.OwnerName ? "selected" : "")>@createdbyowner.OwnerName</option>
                }
            </select>
        </div>
        <a href="/TodoItem/NewTodoItem" class="btn btn-danger" role="button">+ New To-Do Item</a>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="custom card mt-3" style="max-width: 1000px; margin: auto;">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="custom card-title">Description</h5>
                    <h5 class="custom card-title">Status</h5>
                    <h5 class="custom card-title">Category</h5>
                    <h5 class="custom card-title">Assigned To</h5>
                    <h5 class="custom card-title">Created By</h5>
                    <h5 class="custom card-title">Actions</h5>
                </div>
                <hr />
                @foreach (var todoitem in Model.TodoItemsList)
                {
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="custom card-title">@todoitem.TodoItemDescription</h5>
                        <p class="custom card-text">@todoitem.Status</p>
                        <p class="custom card-text">@todoitem.CategoryName</p>
                        <p class="custom card-title">@todoitem.AssignedTo</p>
                        <p class="custom card-title">@todoitem.CreatedBy</p>
                        <div>

                            @if (todoitem.TransactionId.HasValue)
                            {
                                <a href="@Url.Action("ListExpenses", "Transaction", new { transactionId = todoitem.TransactionId })" class="btn btn-outline-primary" role="button" title="View related expense">
                                    <img src="~/Content/images/coin.png" alt="A dollar icon" class="size">
                                </a>
                            }
                            else
                            {

                                <a href="@Url.Action("ListExpenses", "Transaction", new { transactionId = todoitem.TransactionId })" class="btn btn-outline-primary disabled" role="button" aria-disabled="true">
                                    <img src="~/Content/images/coin.png" alt="A dollar icon" class="size">
                                </a>
                            }
                            <a href="/TodoItem/EditTodoItem/@todoitem.TodoItemId" class="btn btn-outline-primary" role="button" title="Update todo item">
                                <img src="~/Content/images/editing.png" alt="A pencil icon" class="size">
                            </a>
                            <a href="#" class="btn btn-outline-danger me-2" role="button" title="Delete todo item" data-bs-toggle="modal" data-bs-target="#deleteModal" data-id="@todoitem.TodoItemId" data-title="@todoitem.TodoItemDescription">
                                <img src="~/Content/images/bin.png" alt="A dustbin icon" class="size">
                            </a>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-danger text-center" role="alert">
                    <span class="modal-title-icon">&#9888;</span> <!-- Warning Icon -->
                    <strong id="todoItemDescription"></strong>
                </div>
                <p class="text-center">Are you sure you want to delete this to-do item?</p>
                <p class="text-center">This action cannot be undone. All values associated with this item will be lost.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form method="post" id="deleteForm">
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var deleteModal = document.getElementById('deleteModal');
        deleteModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget; // Button that triggered the modal
            var itemId = button.getAttribute('data-id'); // Extract info from data-* attributes
            var itemDescription = button.getAttribute('data-title'); // Extract the title
            var deleteUrl = '/TodoItem/DeleteTodoItem/' + itemId;
            var modalTitle = deleteModal.querySelector('#todoItemDescription');
            var deleteForm = deleteModal.querySelector('#deleteForm');
            modalTitle.textContent = itemDescription; // Update the modal title
            deleteForm.setAttribute('action', deleteUrl); // Update the form action
        });
    });
</script>

